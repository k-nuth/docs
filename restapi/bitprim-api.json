{"swagger":"2.0","info":{"version":"v1","title":"bitprim"},"paths":{"/api/addr/{paymentAddress}/unconfirmedBalance":{"get":{"tags":["Address"],"summary":"Given an address, get unconfirmed balance in coin units.","operationId":"GetUnconfirmedBalance","consumes":[],"produces":[],"parameters":[{"name":"paymentAddress","in":"path","description":"The address of interest. For BCH, it can be in cashaddr format.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/addr/{paymentAddress}/balance":{"get":{"tags":["Address"],"summary":"Given an address, get current confirmed balance in coin units.","operationId":"GetAddressBalance","consumes":[],"produces":[],"parameters":[{"name":"paymentAddress","in":"path","description":"The address of interest. For BCH, it can be in cashaddr format.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/addr/{paymentAddress}":{"get":{"tags":["Address"],"summary":"Given an address, get current confirmed and unconfirmed balance, and optionally, a list of all\r\ntransaction ids involved in the address.","operationId":"GetAddressHistory","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"paymentAddress","in":"path","description":"The address of interest. For BCH, it can be in cashaddr format.","required":true,"type":"string"},{"name":"noTxList","in":"query","description":"If 0, include transaction id list; otherwise, do not include it.","required":false,"type":"integer","format":"int32"},{"name":"from","in":"query","description":"Allows selecting a subrange of transaction ids from the full list; starts in zero (0).","required":false,"type":"integer","format":"int32"},{"name":"to","in":"query","description":"Allows selecting a subrange of transactions from the full list; max value is (txCount - 1).","required":false,"type":"integer","format":"int32"},{"name":"returnLegacyAddresses","in":"query","description":"If and only if true, use legacy address format in response (BCH only).","required":false,"type":"boolean"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetAddressHistoryResponse"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}},"/api/addr/{paymentAddress}/totalReceived":{"get":{"tags":["Address"],"summary":"Given an address, get total received amount in coin units.","operationId":"GetTotalReceived","consumes":[],"produces":[],"parameters":[{"name":"paymentAddress","in":"path","description":"The address of interest. For BCH, it can be in cashaddr format.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/addr/{paymentAddress}/totalSent":{"get":{"tags":["Address"],"summary":"Given an address, get total sent amount in coin units.","operationId":"GetTotalSent","consumes":[],"produces":[],"parameters":[{"name":"paymentAddress","in":"path","description":"The address of interest. For BCH, it can be in cashaddr format.","required":true,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/addrs/{paymentAddresses}/utxo":{"get":{"tags":["Address"],"summary":"Given a list of addresses, get their combined unspent outputs.","operationId":"GetUtxoForMultipleAddresses","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"paymentAddresses","in":"path","description":"Comma separated list of addresses. For BCH, cashaddr format is accepted.","required":true,"type":"string"},{"name":"returnLegacyAddresses","in":"query","description":"If and only if true, return addresses in legacy format. By default, use cashaddr.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Success","schema":{"type":"array","items":{"$ref":"#/definitions/Utxo"}}}}}},"/api/addrs/utxo":{"post":{"tags":["Address"],"summary":"Given a list of addresses, get their combined unspent outputs.","operationId":"GetUtxoForMultipleAddressesPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"requestParams","in":"body","description":"In params.addrs, a comma separated list of addresses. For BCH, cashaddr format is accepted.","required":false,"schema":{"$ref":"#/definitions/GetUtxosForMultipleAddressesRequest"}}],"responses":{"200":{"description":"Success","schema":{"type":"array","items":{"$ref":"#/definitions/Utxo"}}}}}},"/api/addr/{paymentAddress}/utxo":{"get":{"tags":["Address"],"summary":"Given an address, get all of its currently unspent outputs.","operationId":"GetUtxoForSingleAddress","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"paymentAddress","in":"path","description":"The address of interest. For BCH, cashaddr format is accepted.","required":true,"type":"string"},{"name":"legacyAddresFormat","in":"query","description":"If and only if true, use legacy address format in returned object. By\r\n           default, cash addr is used.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Success","schema":{"type":"array","items":{"$ref":"#/definitions/Utxo"}}}}}},"/api/block/{hash}":{"get":{"tags":["Block"],"summary":"Given a block hash, retrieve its univocally associated block.","operationId":"GetBlockByHash","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"hash","in":"path","description":"64-character (32 bytes) hex string.","required":true,"type":"string"},{"name":"noTxList","in":"query","description":"If 0, include transaction id list; otherwise, do not include it.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetBlockByHashResponse"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}},"/api/block-index/{height}":{"get":{"tags":["Block"],"summary":"Given a block height, retrieve the block hash.","operationId":"GetBlockByHeight","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"height","in":"path","description":"Block height.","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetBlockByHeightResponse"}}}}},"/api/blocks":{"get":{"tags":["Block"],"summary":"Given a date, return all blocks mined on that day.","operationId":"GetBlocksByDate","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"limit","in":"query","description":"Max amount of blocks in result (older ones discarded).","required":false,"type":"integer","format":"int32"},{"name":"blockDate","in":"query","description":"Date to search, in the format specified in the settings. Defaults to yyyy-MM-dd (dashes required).","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetBlocksByDateResponse"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}},"/api/rawblock/{hash}":{"get":{"tags":["Block"],"summary":"Given a block hash, return the block's representation as a hex string.","operationId":"GetRawBlockByHash","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"hash","in":"path","description":"64-character (32 bytes) hex string which univocally identifies the block in the blockchain.","required":true,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetRawBlockResponse"}}}}},"/api/rawblock-index/{height}":{"get":{"tags":["Block"],"summary":"Given a block height, return the block's representation as a hex string.","operationId":"GetRawBlockByHeight","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"height","in":"path","description":"Height which univocally identifies the block in the blockchain.","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetRawBlockResponse"}}}}},"/api/utils/estimatefee":{"get":{"tags":["Chain"],"summary":"Get an estimate value for current block fee.","operationId":"GetEstimateFee","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"nbBlocks","in":"query","description":"Comma-separed list of block numbers to use for each estimation; a higher number\r\n           implies higher precision, but will take longer to calculate.","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/status/bestblockhash":{"get":{"tags":["Chain"],"summary":"Get best block hash.","operationId":"GetBestBlockHash","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetBestBlockHashResponse"}}}}},"/api/currency":{"get":{"tags":["Chain"],"summary":"Get current coin price in US dollars.","operationId":"GetCurrency","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetCurrencyResponse"}}}}},"/api/status/difficulty":{"get":{"tags":["Chain"],"summary":"Get latest block difficulty.","operationId":"GetDifficulty","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetDifficultyResponse"}}}}},"/api/healthcheck":{"get":{"tags":["Chain"],"summary":"Check if the underlying bitprim node is running correctly.","operationId":"GetHealthCheck","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"minimumSync","in":"query","description":"Minimum required sync percentage (from 0 to 100) to consider node healthy.","required":false,"type":"number","format":"float"}],"responses":{"200":{"description":"Success","schema":{"type":"string"}}}}},"/api/status/info":{"get":{"tags":["Chain"],"summary":"Get underlying node information.","operationId":"GetInfo","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetInfoResponse"}}}}},"/api/status/lastblockhash":{"get":{"tags":["Chain"],"summary":"Get latest block hash.","operationId":"GetLastBlockHash","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetLastBlockHashResponse"}}}}},"/api/status":{"get":{"tags":["Chain"],"summary":"Get various node status information.\r\n(getInfo: see GetInfo method | getDifficulty: see GetDifficulty method | getBestBlockHash: see GetBestBlockHash method |\r\n getLastBlockHash: see GetLastBlockHash method)","operationId":"GetStatus","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"q","in":"query","description":"(getInfo | getDifficulty | getBestBlockHash | getLastBlockHash). Default: getInfo.\r\n           Use the name 'q' for this query parameter (it will be mapped to the 'method' parameter).","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"type":"object"}}}}},"/api/sync":{"get":{"tags":["Chain"],"summary":"Get node synchronization status, as in how up to date it is with the blockchain.","operationId":"GetSyncStatus","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetSyncStatusResponse"}}}}},"/api/messages/verify":{"get":{"tags":["Message"],"summary":"Validate message.","operationId":"VerifyMessage","consumes":[],"produces":[],"parameters":[{"name":"address","in":"query","description":"Destination address. For BCH, cashaddr format is accepted.","required":false,"type":"string"},{"name":"signature","in":"query","description":"To identify message sender, created using his private key.","required":false,"type":"string"},{"name":"message","in":"query","description":"Message to verify.","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}},"post":{"tags":["Message"],"summary":"Validate message.","operationId":"VerifyMessagePost","consumes":[],"produces":[],"parameters":[{"name":"address","in":"query","description":"Destination address. For BCH, cashaddr format is accepted.","required":false,"type":"string"},{"name":"signature","in":"query","description":"To identify message sender, created using his private key.","required":false,"type":"string"},{"name":"message","in":"query","description":"Message to verify.","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/version":{"get":{"tags":["Peer"],"summary":"Get bitprim-insight API version.","operationId":"GetApiVersion","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetApiVersionResponse"}}}}},"/api/peer":{"get":{"tags":["Peer"],"summary":"Get peer/Knuth node status information.","operationId":"GetPeerStatus","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetPeerStatusResponse"}}}}},"/api/tx/send":{"post":{"tags":["Transaction"],"summary":"Publish a transaction to the P2P network.","operationId":"BroadcastTransaction","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"request","in":"body","description":"See RawTxRequest DTO.","required":false,"schema":{"$ref":"#/definitions/RawTxRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BroadcastTransactionResponse"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}},"/api/rawtx/{hash}":{"get":{"tags":["Transaction"],"summary":"Given a transaction hash, retrieve its representation as a hex string.","operationId":"GetRawTransactionByHash","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"hash","in":"path","description":"64-character (32 bytes) hex string which univocally identifies the transaction in the network.","required":true,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetRawTransactionResponse"}}}}},"/api/tx/{hash}":{"get":{"tags":["Transaction"],"summary":"Given a transaction hash, retrieve its representation as a hex string.","operationId":"GetTransactionByHash","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"hash","in":"path","description":"64-character (32 bytes) hex string which univocally identifies the transaction in the network.","required":true,"type":"string"},{"name":"requireConfirmed","in":"query","description":"1 = only confirmed transactions, otherwise include unconfirmed as well.","required":false,"type":"integer","format":"int32"},{"name":"returnLegacyAddresses","in":"query","description":"If and only if true, return addresses in legacy format for BCH.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/TransactionSummary"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}},"/api/txs":{"get":{"tags":["Transaction"],"summary":"Returns all transactions from a block, or an address (only one source at a time).","operationId":"GetTransactions","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"block","in":"query","description":"64-character (32 bytes) hex string which univocally identifies a block.","required":false,"type":"string"},{"name":"address","in":"query","description":"Address to get transactions from. When selecting by address, unconfirmed\r\n           transactions are included.","required":false,"type":"string"},{"name":"pageNum","in":"query","description":"Results page number to select; starts in zero. Page size is configurable via\r\n           appsettings.json and command line. By default, page size is 10 transactions. See TransactionsByAddressPageSize key.","required":false,"type":"integer","format":"int32"},{"name":"returnLegacyAddresses","in":"query","description":"If and only if true, return legacy addresses in BCH.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetTransactionsResponse"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}},"/api/addrs/{paymentAddresses}/txs":{"get":{"tags":["Transaction"],"summary":"Returns all transactions from a set of addresses.","operationId":"GetTransactionsForMultipleAddresses","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"paymentAddresses","in":"path","description":"Comma-separated list of addresses. For BCH, cashaddr format is accepted.\r\n           The maximum amount of addresses is determined by the MaxAddressesPerQuery configuration key.","required":true,"type":"string"},{"name":"from","in":"query","description":"Results selection starting point; first item is 0 (zero). Default to said value.","required":false,"type":"integer","format":"int32"},{"name":"to","in":"query","description":"Results selection ending point. Default to 10.","required":false,"type":"integer","format":"int32"},{"name":"returnLegacyAddresses","in":"query","description":"If and only if true, return addresses in legacy format for BCH.","required":false,"type":"boolean"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetTransactionsForMultipleAddressesResponse"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}},"/api/addrs/txs":{"post":{"tags":["Transaction"],"summary":"Returns all transactions from a set of adresses.","operationId":"GetTransactionsForMultipleAddresses_Post","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"request","in":"body","description":"See GetTxsForMultipleAddressesRequest DTO.","required":false,"schema":{"$ref":"#/definitions/GetTxsForMultipleAddressesRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetTransactionsForMultipleAddressesResponse"}},"400":{"description":"Bad Request","schema":{"type":"string"}}}}}},"definitions":{"GetAddressHistoryResponse":{"description":"Address history response data structure.","type":"object","properties":{"addrStr":{"description":"Address string; for BCH, it can be in cashaddr format.","type":"string"},"balance":{"format":"double","description":"Current wallet balance in coin units.","type":"number"},"balanceSat":{"format":"int64","description":"Current wallet balance in Satoshis.","type":"integer"},"totalReceived":{"format":"double","description":"Total amount of money received from the beginning of the chain, in coin units.","type":"number"},"totalReceivedSat":{"format":"int64","description":"Total amount sent in Satoshis.","type":"integer"},"totalSent":{"format":"double","description":"Total amount of money sent from this wallet, from the beginning of the chain, in coin units.","type":"number"},"totalSentSat":{"format":"int64","description":"Total amount sent in Satoshis.","type":"integer"},"unconfirmedBalance":{"format":"double","description":"Balance computed considering only the currently unconfirmed transactions involving this address, in coin units.","type":"number"},"unconfirmedBalanceSat":{"format":"int64","description":"Unconfirmed balance in Satoshis.","type":"integer"},"unconfirmedTxAppearances":{"format":"int64","description":"Current amount of distinct unconfirmed transactions involving this address.\r\nCorrectly spelled version, for those who prefer it.","type":"integer"},"unconfirmedTxApperances":{"format":"int64","description":"Current amount of distinct unconfirmed transactions involving this address.\r\nThe spelling error (apperances) is intentional, for compatibility with insight.\r\nTODO Remove this property as soon as no one uses it","type":"integer"},"txAppearances":{"format":"int32","description":"Amount of distinct transactions (i.e. don't count the same tx more than once) involving this address.\r\nCorrectly spelled version, for those who prefer it.","type":"integer"},"txApperances":{"format":"int32","description":"Amount of distinct transactions (i.e. don't count the same tx more than once) involving this address.\r\nThe spelling error (apperances) is intentional, for compatibility with insight.\r\nTODO Remove this property as soon as no one uses it","type":"integer"},"transactions":{"description":"Selected transaction ids (using from and to parameters) from the full history.","type":"array","items":{"type":"string"}}}},"Utxo":{"description":"Unspent transaction output data structure.","type":"object","properties":{"address":{"description":"Destination address for this output.","type":"string"},"txid":{"description":"Transaction hash as 64-character (32 bytes) hex string.","type":"string"},"vout":{"format":"int64","description":"Total unspent money for this output, in Satoshis.","type":"integer"},"scriptPubKey":{"description":"Output script.","type":"string"},"amount":{"format":"double","description":"Total unspent money for this output, in coin units.","type":"number"},"satoshis":{"format":"int64","description":"Total unspent money for this output, in Satoshis.","type":"integer"},"height":{"format":"int64","description":"Height of the block which contains the transaction which contains this utxo.","type":"integer"},"confirmations":{"format":"int64","description":"For the block which contains this output.","type":"integer"}}},"GetUtxosForMultipleAddressesRequest":{"description":"GetUtxosForMultipleAddressesRequest data structure.","type":"object","properties":{"legacy_addr":{"description":"If and only if true, use legacy addresses in BCH.","type":"boolean"},"addrs":{"description":"Comma-separated list of addresses; for BCH, cashaddr format is accepted.","type":"string"}}},"GetBlockByHashResponse":{"description":"GetBlockByHash response data structure.","type":"object","properties":{"hash":{"description":"Block hash as a 64-character (32 bytes) hex string.","type":"string"},"size":{"format":"int64","description":"Serialized block size in bytes","type":"integer"},"height":{"format":"int64","description":"Block height (Genesis height is considered zero).","type":"integer"},"version":{"format":"int32","description":"Format version.","type":"integer"},"merkleroot":{"description":"Hash of all block transactions (Merkle tree root) as a 64-character (32 bytes) hex string.","type":"string"},"tx":{"description":"Block transaction ids.","type":"array","items":{"type":"string"}},"time":{"format":"int32","description":"Block mining timestamp in Unix format.","type":"integer"},"nonce":{"format":"int32","description":"Block nonce.","type":"integer"},"bits":{"format":"int32","description":"Packed/compressed representation of block difficulty.","type":"integer"},"difficulty":{"format":"double","description":"A representation of the computing power which was required to mine this block.","type":"number"},"chainwork":{"description":"Total amount of hashes expected to be calculated to reach this block height from genesis.","type":"string"},"confirmations":{"format":"int64","description":"Every block on top of the current one is considered 1 confirmation.","type":"integer"},"previousblockhash":{"description":"Previous block hash as a 64-character (32 bytes) hex string; for the first block (Genesis), this field is left empty.","type":"string"},"nextblockhash":{"description":"Next block hash as a 64-character (32 bytes) hex string; for the latest block, this field is left empty.","type":"string"},"reward":{"format":"double","description":"Fees earned by the miner who mined this block, in coin units.","type":"number"},"isMainChain":{"description":"True if and only if this block belongs to the main chain.","type":"boolean"},"poolInfo":{"$ref":"#/definitions/PoolInfo","description":"Refers to the pool to which the miner belongs (if applies)."},"txCount":{"format":"int64","description":"Block transaction length.","type":"integer"}}},"PoolInfo":{"description":"Block miner pool information.","type":"object","properties":{"poolName":{"description":"Designates the block's miner's pool","type":"string"},"url":{"description":"The block's miner's pool url","type":"string"}}},"GetBlockByHeightResponse":{"description":"GetBlockByHeightResponse data structure.","type":"object","properties":{"blockHash":{"description":"Block hash as 64-character (32 bytes) hex string.","type":"string"}}},"GetBlocksByDateResponse":{"description":"Blocks by date result data structure.","type":"object","properties":{"blocks":{"description":"Found blocks.","type":"array","items":{"$ref":"#/definitions/BlockSummary"}},"length":{"format":"int32","description":"Amount of found blocks.","type":"integer"},"pagination":{"$ref":"#/definitions/Pagination","description":"Pagination information."}}},"BlockSummary":{"description":"Summarized block information.","type":"object","properties":{"height":{"format":"int64","description":"Block height.","type":"integer"},"size":{"format":"int64","description":"Serialized block size.","type":"integer"},"hash":{"description":"Block hash as 64-character (32 bytes) hex string.","type":"string"},"time":{"format":"int32","description":"Date when the block was mined, in Unix timestamp format.","type":"integer"},"txlength":{"format":"int64","description":"Amount of transactions in the block.","type":"integer"},"poolInfo":{"$ref":"#/definitions/PoolInfo","description":"Block miner pool info (if applies)."}}},"Pagination":{"description":"Pagination information (not including results).","type":"object","properties":{"next":{"description":"Day after search date.","type":"string"},"prev":{"description":"Day before search date.","type":"string"},"currentTs":{"format":"int64","description":"Unix timestamp; marks the end of the search interval.","type":"integer"},"current":{"description":"Search date in configured date input format (default: yyyy-MM-dd).","type":"string"},"isToday":{"description":"True if and only if the block date to search corresponds to today.","type":"boolean"},"more":{"description":"True if and only if the paginated results do not contain all the matching blocks.","type":"boolean"},"moreTs":{"format":"int64","description":"Unix timestamp of the first block beyond (i.e. before in the blockchain) the selected interval.","type":"integer"}}},"GetRawBlockResponse":{"description":"GetRawBlockResponse data structure.","type":"object","properties":{"rawblock":{"description":"Block raw data as hex string.","type":"string"}}},"GetBestBlockHashResponse":{"description":"GetBestBlockHashResponse data structure.","type":"object","properties":{"bestblockhash":{"description":"Hash of the best block (tip) in the longest block chain, as a hex string.","type":"string"}}},"GetCurrencyResponse":{"description":"GetCurrencyResponse data structure.","type":"object","properties":{"status":{"format":"int32","description":"200 = success, any other value is considered an error.","type":"integer"},"data":{"$ref":"#/definitions/CurrencyData","description":"200 = success, any other value is considered an error."}}},"CurrencyData":{"description":"Currency prices from various providers.","type":"object","properties":{"bitstamp":{"format":"float","description":"Current price in USD as reported by the Bitstamp service.","type":"number"}}},"GetDifficultyResponse":{"description":"GetDifficultyResponse data structure.","type":"object","properties":{"difficulty":{"format":"double","description":"Latest block difficulty.","type":"number"}}},"GetInfoResponse":{"description":"GetInfoResponse data structure.","type":"object","properties":{"info":{"$ref":"#/definitions/GetInfoData","description":"Detailed status information."}}},"GetInfoData":{"description":"Specific status information.","type":"object","properties":{"version":{"description":"Underlying Knuth node version.","type":"string"},"protocolversion":{"description":"Blockchain protocol version.","type":"string"},"blocks":{"format":"int64","description":"Current blockchain height","type":"integer"},"timeoffset":{"description":"Offset to apply to UTC times.","type":"string"},"connections":{"format":"int32","description":"Current amount of P2P connections established by the Knuth node.","type":"integer"},"proxy":{"description":"Node proxy URL.","type":"string"},"difficulty":{"format":"double","description":"Last block difficulty.","type":"number"},"testnet":{"description":"True if and only if node is connected to testnet.","type":"boolean"},"relayfee":{"description":"Current node relay fee.","type":"string"},"errors":{"description":"Latest node error messages.","type":"string"},"network":{"description":"\"livenet\" for mainnet, given network name for other cases.","type":"string"},"coin":{"description":"Currency acronym; BTC for Bitcoin, TBTC for Bitcoin Testnet, BCH for Bitcoin Cash, and so on.","type":"string"}}},"GetLastBlockHashResponse":{"description":"GetLastBlockHashResponse data structure.","type":"object","properties":{"syncTipHash":{"description":"Hash of the last block (tip) in the longest block chain, as a hex string.","type":"string"},"lastblockhash":{"description":"Hash of the last mined block, as a hex string.","type":"string"}}},"GetSyncStatusResponse":{"description":"GetSyncStatusResponse data structure.","type":"object","properties":{"status":{"description":"(finished | synchronizing | unknown)","type":"string"},"blockChainHeight":{"description":"Current height of the blockchain (not the local node's copy, but the global value);\r\n\"unknown\" if this value cannot be obtained at the moment.","type":"string"},"syncPercentage":{"description":"height / blockchainHeight * 100","type":"string"},"height":{"format":"int64","description":"Current height of the node's local copy of the blockchain.","type":"integer"},"error":{"description":"Error message.","type":"string"},"type":{"description":"Node type.","type":"string"}}},"GetApiVersionResponse":{"description":"GetApiVersionResponse data structure.","type":"object","properties":{"version":{"description":"bitprim-insight API version in semantic versioning notation (major.minor.patch).","type":"string"}}},"GetPeerStatusResponse":{"description":"GetPeerStatusResponse data structure.","type":"object","properties":{"connected":{"description":"True if and only if the node is connected to the blockchain's P2P network.","type":"boolean"},"port":{"format":"int32","description":"Port used by the node to communicate with his peers. Null equals the well-known default.","type":"integer"},"host":{"description":"Node's IP address inside the network.","type":"string"}}},"RawTxRequest":{"description":"RawTxRequest data structure.","type":"object","properties":{"rawtx":{"description":"Hex string representing the raw transaction to try and broadcast.","type":"string"}}},"BroadcastTransactionResponse":{"description":"BroadcastTransactionResponse data structure.","type":"object","properties":{"txid":{"$ref":"#/definitions/BroadCastTransactionResult","description":"This object contains all the response information."}}},"BroadCastTransactionResult":{"description":"This object contains all the response information.","type":"object","properties":{"result":{"description":"Transaction hash as 64-character (32 bytes) hex string. This will identify it univocally inside the network.","type":"string"},"error":{"description":"Error message, if appropiate.","type":"string"},"id":{"format":"int32","description":"Internal transaction id.","type":"integer"}}},"GetRawTransactionResponse":{"description":"GetRawTransactionResponse data structure.","type":"object","properties":{"rawtx":{"description":"Transaction representation as a hex string.","type":"string"}}},"TransactionSummary":{"description":"TransactionSummary data structure.","type":"object","properties":{"txid":{"description":"64-character (32 bytes) hex string which univocally identifies the transaction in the network.","type":"string"},"version":{"format":"int32","description":"Transaction protocol version.","type":"integer"},"locktime":{"format":"int32","description":"Transaction locktime, expressed as the blockchain height at which the transaction will be considered confirmed.","type":"integer"},"isCoinBase":{"description":"True if and only if this transaction is coinbase (i.e. generates new coins).\r\nNot serialized when false (default value).","type":"boolean"},"vin":{"description":"Transaction inputs.","type":"array","items":{"$ref":"#/definitions/TransactionInputSummary"}},"valueIn":{"format":"double","description":"Sum of all inputs, in coin units.\r\nNot serialized when zero (default value).","type":"number"},"fees":{"format":"double","description":"Transaction fees, in coin units.\r\nNot serialized when inputs == 0 (default value).","type":"number"},"vout":{"description":"Transaction outputs.","type":"array","items":{"$ref":"#/definitions/TransactionOutputSummary"}},"blockhash":{"description":"Identifies the transaction's block (only for confirmed transactions).","type":"string"},"blockheight":{"format":"int64","description":"Height of the transaction's block (only for confirmed transactions).","type":"integer"},"confirmations":{"format":"int64","description":"Amount of blocks on top of the transaction's block.","type":"integer"},"time":{"format":"int32","description":"Unix timestamp which marks when the transaction entered the blockchain.","type":"integer"},"blocktime":{"format":"int32","description":"Block mining timestamp.","type":"integer"},"valueOut":{"format":"double","description":"Sum of all outputs, in coin units.","type":"number"},"size":{"format":"int64","description":"Transaction serialized size in bytes.","type":"integer"}}},"TransactionInputSummary":{"description":"TransactionInputSummary data structure.\r\nThis class has no fields because the common fields between\r\ncoinbase and non coinbase inputs follow a different order,\r\nso having common fields would hinder serialization.","type":"object","properties":{}},"TransactionOutputSummary":{"description":"TransactionOutputSummary data structure.","type":"object","properties":{"value":{"description":"Output value in coin units.","type":"string"},"n":{"format":"int32","description":"Output index in transaction.","type":"integer"},"scriptPubKey":{"$ref":"#/definitions/OutputScriptSummary","description":"Output script."},"spentTxId":{"description":"Spent transaction hash as 32-character hex string.","type":"string"},"spentIndex":{"format":"int32","description":"Previous output index inside its transaction.","type":"integer"},"spentHeight":{"format":"int64","description":"Previous output's transaction's block height.","type":"integer"}}},"OutputScriptSummary":{"description":"OutputScriptSummary data structure.","type":"object","properties":{"hex":{"description":"Script representation as raw hex data.","type":"string"},"asm":{"description":"Script representation in Script language.","type":"string"},"addresses":{"description":"Output destination addresses.","type":"array","items":{"type":"string"}},"type":{"description":"Script type (pub2keyhash, multisig, etc)","type":"string"}}},"GetTransactionsResponse":{"description":"GetTransactionsResponse data structure.","type":"object","properties":{"pagesTotal":{"format":"int64","description":"pagesTotal = txCount / pageSize. Page size is configurable via appsettings.json\r\nand command line. See \"TransactionsByAddressPageSize\" key.","type":"integer"},"txs":{"description":"Selected results page.","type":"array","items":{"$ref":"#/definitions/TransactionSummary"}}}},"GetTransactionsForMultipleAddressesResponse":{"description":"GetTransactionsForMultipleAddressesResponse data structure.","type":"object","properties":{"totalItems":{"format":"int32","description":"Unpaginated results count.","type":"integer"},"from":{"format":"int32","description":"Results selection starting point.","type":"integer"},"to":{"format":"int32","description":"Results selection ending point.","type":"integer"},"items":{"description":"Selected transactions.","type":"array","items":{"$ref":"#/definitions/TransactionSummary"}}}},"GetTxsForMultipleAddressesRequest":{"description":"GetTxsForMultipleAddressesRequest data structure.","type":"object","properties":{"addrs":{"description":"Comma-separated list of addresses; for BCH, cashaddr format is accepted.\r\nThe maximum amount of addresses is determined by the MaxAddressesPerQuery configuration key.","type":"string"},"from":{"format":"int32","description":"For selecting a subset of the transaction list; starts in zero for the first one.","type":"integer"},"to":{"format":"int32","description":"For selecting a subset of the transaction list; max value is txCount - 1.","type":"integer"},"noAsm":{"format":"int32","description":"Choose whether or not to include asm representation of input and output scripts. (1 = include, 0 = don't include)","type":"integer"},"noScriptSig":{"format":"int32","description":"Choose whether or not to include scriptsig for scripts. (1 = include, 0 = don't include)","type":"integer"},"noSpend":{"format":"int32","description":"Choose whether or not to include spend information. (1 = include, 0 = don't include)","type":"integer"},"returnLegacyAddresses":{"description":"If and only if true, return BCH addresses in legacy format.","type":"boolean"}}}}}